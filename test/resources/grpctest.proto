syntax = "proto3";
package protojure.test.grpc;

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";

message CloseDetectRequest {
    string id = 1;
}

message FlowControlRequest {
    int32 count = 1;
    int32 payload_size = 2;

}

message FlowControlPayload {
    int32 id = 1;
    bytes data = 2;
}

message SimpleResponse {
    string msg = 1;
}

service TestService {
    rpc CloseDetect (CloseDetectRequest) returns (stream google.protobuf.Any);
    rpc FlowControl (FlowControlRequest) returns (stream FlowControlPayload);
    rpc Metadata (google.protobuf.Empty) returns (SimpleResponse);
    rpc ShouldThrow (google.protobuf.Empty) returns (google.protobuf.Empty);
    rpc Async (google.protobuf.Empty) returns (SimpleResponse);
    rpc AllEmpty(google.protobuf.Empty) returns (google.protobuf.Empty);
    rpc AsyncEmpty(google.protobuf.Empty) returns (stream google.protobuf.Empty);
}